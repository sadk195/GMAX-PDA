// Generated by view binder compiler. Do not edit!
package com.example.gmax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gmax.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityS11DtlBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView appTitle;

  @NonNull
  public final LinearLayout appView1;

  @NonNull
  public final LinearLayout appView2;

  @NonNull
  public final LinearLayout appView3;

  @NonNull
  public final LinearLayout appView31;

  @NonNull
  public final LinearLayout appView41;

  @NonNull
  public final LinearLayout boxView1;

  @NonNull
  public final Button btnHide;

  @NonNull
  public final RelativeLayout layoutBody;

  @NonNull
  public final RelativeLayout layoutBtn;

  @NonNull
  public final RelativeLayout layoutMenuTitle;

  @NonNull
  public final TextView lblCount;

  @NonNull
  public final LinearLayout lblView1;

  @NonNull
  public final ListView listOrder;

  @NonNull
  public final TextView slNm;

  @NonNull
  public final TextView spec;

  @NonNull
  public final TextView textview;

  private ActivityS11DtlBinding(@NonNull RelativeLayout rootView, @NonNull TextView appTitle,
      @NonNull LinearLayout appView1, @NonNull LinearLayout appView2,
      @NonNull LinearLayout appView3, @NonNull LinearLayout appView31,
      @NonNull LinearLayout appView41, @NonNull LinearLayout boxView1, @NonNull Button btnHide,
      @NonNull RelativeLayout layoutBody, @NonNull RelativeLayout layoutBtn,
      @NonNull RelativeLayout layoutMenuTitle, @NonNull TextView lblCount,
      @NonNull LinearLayout lblView1, @NonNull ListView listOrder, @NonNull TextView slNm,
      @NonNull TextView spec, @NonNull TextView textview) {
    this.rootView = rootView;
    this.appTitle = appTitle;
    this.appView1 = appView1;
    this.appView2 = appView2;
    this.appView3 = appView3;
    this.appView31 = appView31;
    this.appView41 = appView41;
    this.boxView1 = boxView1;
    this.btnHide = btnHide;
    this.layoutBody = layoutBody;
    this.layoutBtn = layoutBtn;
    this.layoutMenuTitle = layoutMenuTitle;
    this.lblCount = lblCount;
    this.lblView1 = lblView1;
    this.listOrder = listOrder;
    this.slNm = slNm;
    this.spec = spec;
    this.textview = textview;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityS11DtlBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityS11DtlBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_s11_dtl, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityS11DtlBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_title;
      TextView appTitle = ViewBindings.findChildViewById(rootView, id);
      if (appTitle == null) {
        break missingId;
      }

      id = R.id.app_view1;
      LinearLayout appView1 = ViewBindings.findChildViewById(rootView, id);
      if (appView1 == null) {
        break missingId;
      }

      id = R.id.app_view2;
      LinearLayout appView2 = ViewBindings.findChildViewById(rootView, id);
      if (appView2 == null) {
        break missingId;
      }

      id = R.id.app_view3;
      LinearLayout appView3 = ViewBindings.findChildViewById(rootView, id);
      if (appView3 == null) {
        break missingId;
      }

      id = R.id.app_view3_1;
      LinearLayout appView31 = ViewBindings.findChildViewById(rootView, id);
      if (appView31 == null) {
        break missingId;
      }

      id = R.id.app_view4_1;
      LinearLayout appView41 = ViewBindings.findChildViewById(rootView, id);
      if (appView41 == null) {
        break missingId;
      }

      id = R.id.box_view1;
      LinearLayout boxView1 = ViewBindings.findChildViewById(rootView, id);
      if (boxView1 == null) {
        break missingId;
      }

      id = R.id.btn_hide;
      Button btnHide = ViewBindings.findChildViewById(rootView, id);
      if (btnHide == null) {
        break missingId;
      }

      id = R.id.layout_body;
      RelativeLayout layoutBody = ViewBindings.findChildViewById(rootView, id);
      if (layoutBody == null) {
        break missingId;
      }

      id = R.id.layout_btn;
      RelativeLayout layoutBtn = ViewBindings.findChildViewById(rootView, id);
      if (layoutBtn == null) {
        break missingId;
      }

      id = R.id.layout_menu_title;
      RelativeLayout layoutMenuTitle = ViewBindings.findChildViewById(rootView, id);
      if (layoutMenuTitle == null) {
        break missingId;
      }

      id = R.id.lbl_count;
      TextView lblCount = ViewBindings.findChildViewById(rootView, id);
      if (lblCount == null) {
        break missingId;
      }

      id = R.id.lbl_view1;
      LinearLayout lblView1 = ViewBindings.findChildViewById(rootView, id);
      if (lblView1 == null) {
        break missingId;
      }

      id = R.id.listOrder;
      ListView listOrder = ViewBindings.findChildViewById(rootView, id);
      if (listOrder == null) {
        break missingId;
      }

      id = R.id.sl_nm;
      TextView slNm = ViewBindings.findChildViewById(rootView, id);
      if (slNm == null) {
        break missingId;
      }

      id = R.id.spec;
      TextView spec = ViewBindings.findChildViewById(rootView, id);
      if (spec == null) {
        break missingId;
      }

      id = R.id.textview;
      TextView textview = ViewBindings.findChildViewById(rootView, id);
      if (textview == null) {
        break missingId;
      }

      return new ActivityS11DtlBinding((RelativeLayout) rootView, appTitle, appView1, appView2,
          appView3, appView31, appView41, boxView1, btnHide, layoutBody, layoutBtn, layoutMenuTitle,
          lblCount, lblView1, listOrder, slNm, spec, textview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
