// Generated by view binder compiler. Do not edit!
package com.example.gmax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gmax.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityS17ShipmentStatusPopupBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView appTitle;

  @NonNull
  public final Button btnCancle;

  @NonNull
  public final RelativeLayout layoutBtn;

  @NonNull
  public final ListView listOrderShipmentStatus;

  private ActivityS17ShipmentStatusPopupBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView appTitle, @NonNull Button btnCancle, @NonNull RelativeLayout layoutBtn,
      @NonNull ListView listOrderShipmentStatus) {
    this.rootView = rootView;
    this.appTitle = appTitle;
    this.btnCancle = btnCancle;
    this.layoutBtn = layoutBtn;
    this.listOrderShipmentStatus = listOrderShipmentStatus;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityS17ShipmentStatusPopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityS17ShipmentStatusPopupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_s17_shipment_status_popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityS17ShipmentStatusPopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_title;
      TextView appTitle = ViewBindings.findChildViewById(rootView, id);
      if (appTitle == null) {
        break missingId;
      }

      id = R.id.btn_cancle;
      Button btnCancle = ViewBindings.findChildViewById(rootView, id);
      if (btnCancle == null) {
        break missingId;
      }

      id = R.id.layout_btn;
      RelativeLayout layoutBtn = ViewBindings.findChildViewById(rootView, id);
      if (layoutBtn == null) {
        break missingId;
      }

      id = R.id.listOrder_shipment_status;
      ListView listOrderShipmentStatus = ViewBindings.findChildViewById(rootView, id);
      if (listOrderShipmentStatus == null) {
        break missingId;
      }

      return new ActivityS17ShipmentStatusPopupBinding((RelativeLayout) rootView, appTitle,
          btnCancle, layoutBtn, listOrderShipmentStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
