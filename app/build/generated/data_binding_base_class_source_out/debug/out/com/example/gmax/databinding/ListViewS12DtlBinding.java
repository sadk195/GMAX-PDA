// Generated by view binder compiler. Do not edit!
package com.example.gmax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gmax.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListViewS12DtlBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView giQty;

  @NonNull
  public final TextView goodOnHandQty;

  @NonNull
  public final TextView itemCd;

  @NonNull
  public final TextView itemNm;

  @NonNull
  public final TextView movType;

  @NonNull
  public final TextView packagingQty;

  @NonNull
  public final TextView plantCd;

  @NonNull
  public final TextView shipToParty;

  @NonNull
  public final TextView soType;

  private ListViewS12DtlBinding(@NonNull LinearLayout rootView, @NonNull TextView giQty,
      @NonNull TextView goodOnHandQty, @NonNull TextView itemCd, @NonNull TextView itemNm,
      @NonNull TextView movType, @NonNull TextView packagingQty, @NonNull TextView plantCd,
      @NonNull TextView shipToParty, @NonNull TextView soType) {
    this.rootView = rootView;
    this.giQty = giQty;
    this.goodOnHandQty = goodOnHandQty;
    this.itemCd = itemCd;
    this.itemNm = itemNm;
    this.movType = movType;
    this.packagingQty = packagingQty;
    this.plantCd = plantCd;
    this.shipToParty = shipToParty;
    this.soType = soType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListViewS12DtlBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListViewS12DtlBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_view_s12_dtl, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListViewS12DtlBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gi_qty;
      TextView giQty = ViewBindings.findChildViewById(rootView, id);
      if (giQty == null) {
        break missingId;
      }

      id = R.id.good_on_hand_qty;
      TextView goodOnHandQty = ViewBindings.findChildViewById(rootView, id);
      if (goodOnHandQty == null) {
        break missingId;
      }

      id = R.id.item_cd;
      TextView itemCd = ViewBindings.findChildViewById(rootView, id);
      if (itemCd == null) {
        break missingId;
      }

      id = R.id.item_nm;
      TextView itemNm = ViewBindings.findChildViewById(rootView, id);
      if (itemNm == null) {
        break missingId;
      }

      id = R.id.mov_type;
      TextView movType = ViewBindings.findChildViewById(rootView, id);
      if (movType == null) {
        break missingId;
      }

      id = R.id.packaging_qty;
      TextView packagingQty = ViewBindings.findChildViewById(rootView, id);
      if (packagingQty == null) {
        break missingId;
      }

      id = R.id.plant_cd;
      TextView plantCd = ViewBindings.findChildViewById(rootView, id);
      if (plantCd == null) {
        break missingId;
      }

      id = R.id.ship_to_party;
      TextView shipToParty = ViewBindings.findChildViewById(rootView, id);
      if (shipToParty == null) {
        break missingId;
      }

      id = R.id.so_type;
      TextView soType = ViewBindings.findChildViewById(rootView, id);
      if (soType == null) {
        break missingId;
      }

      return new ListViewS12DtlBinding((LinearLayout) rootView, giQty, goodOnHandQty, itemCd,
          itemNm, movType, packagingQty, plantCd, shipToParty, soType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
