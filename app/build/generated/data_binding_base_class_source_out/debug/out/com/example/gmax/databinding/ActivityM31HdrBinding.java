// Generated by view binder compiler. Do not edit!
package com.example.gmax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gmax.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityM31HdrBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView appTitle;

  @NonNull
  public final LinearLayout appView100;

  @NonNull
  public final LinearLayout appView111;

  @NonNull
  public final LinearLayout appView13;

  @NonNull
  public final LinearLayout appView2;

  @NonNull
  public final LinearLayout appView222;

  @NonNull
  public final LinearLayout appView5;

  @NonNull
  public final LinearLayout appView6;

  @NonNull
  public final LinearLayout appView72;

  @NonNull
  public final LinearLayout boxSaveMovedate;

  @NonNull
  public final LinearLayout boxView5;

  @NonNull
  public final Button btnQuery;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText dlvNo;

  @NonNull
  public final TextView dlvNoHide;

  @NonNull
  public final TextView dlvQty;

  @NonNull
  public final ImageView imgBarcode;

  @NonNull
  public final TextView itemCd;

  @NonNull
  public final TextView itemNm;

  @NonNull
  public final LinearLayout lblInformation;

  @NonNull
  public final ListView listOrder;

  @NonNull
  public final EditText moveDate;

  @NonNull
  public final TextView spec;

  @NonNull
  public final TextView textView2;

  private ActivityM31HdrBinding(@NonNull RelativeLayout rootView, @NonNull TextView appTitle,
      @NonNull LinearLayout appView100, @NonNull LinearLayout appView111,
      @NonNull LinearLayout appView13, @NonNull LinearLayout appView2,
      @NonNull LinearLayout appView222, @NonNull LinearLayout appView5,
      @NonNull LinearLayout appView6, @NonNull LinearLayout appView72,
      @NonNull LinearLayout boxSaveMovedate, @NonNull LinearLayout boxView5,
      @NonNull Button btnQuery, @NonNull Button btnSave, @NonNull EditText dlvNo,
      @NonNull TextView dlvNoHide, @NonNull TextView dlvQty, @NonNull ImageView imgBarcode,
      @NonNull TextView itemCd, @NonNull TextView itemNm, @NonNull LinearLayout lblInformation,
      @NonNull ListView listOrder, @NonNull EditText moveDate, @NonNull TextView spec,
      @NonNull TextView textView2) {
    this.rootView = rootView;
    this.appTitle = appTitle;
    this.appView100 = appView100;
    this.appView111 = appView111;
    this.appView13 = appView13;
    this.appView2 = appView2;
    this.appView222 = appView222;
    this.appView5 = appView5;
    this.appView6 = appView6;
    this.appView72 = appView72;
    this.boxSaveMovedate = boxSaveMovedate;
    this.boxView5 = boxView5;
    this.btnQuery = btnQuery;
    this.btnSave = btnSave;
    this.dlvNo = dlvNo;
    this.dlvNoHide = dlvNoHide;
    this.dlvQty = dlvQty;
    this.imgBarcode = imgBarcode;
    this.itemCd = itemCd;
    this.itemNm = itemNm;
    this.lblInformation = lblInformation;
    this.listOrder = listOrder;
    this.moveDate = moveDate;
    this.spec = spec;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityM31HdrBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityM31HdrBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_m31_hdr, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityM31HdrBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_title;
      TextView appTitle = ViewBindings.findChildViewById(rootView, id);
      if (appTitle == null) {
        break missingId;
      }

      id = R.id.app_view100;
      LinearLayout appView100 = ViewBindings.findChildViewById(rootView, id);
      if (appView100 == null) {
        break missingId;
      }

      id = R.id.app_view111;
      LinearLayout appView111 = ViewBindings.findChildViewById(rootView, id);
      if (appView111 == null) {
        break missingId;
      }

      id = R.id.app_view13;
      LinearLayout appView13 = ViewBindings.findChildViewById(rootView, id);
      if (appView13 == null) {
        break missingId;
      }

      id = R.id.app_view2;
      LinearLayout appView2 = ViewBindings.findChildViewById(rootView, id);
      if (appView2 == null) {
        break missingId;
      }

      id = R.id.app_view222;
      LinearLayout appView222 = ViewBindings.findChildViewById(rootView, id);
      if (appView222 == null) {
        break missingId;
      }

      id = R.id.app_view5;
      LinearLayout appView5 = ViewBindings.findChildViewById(rootView, id);
      if (appView5 == null) {
        break missingId;
      }

      id = R.id.app_view6;
      LinearLayout appView6 = ViewBindings.findChildViewById(rootView, id);
      if (appView6 == null) {
        break missingId;
      }

      id = R.id.app_view72;
      LinearLayout appView72 = ViewBindings.findChildViewById(rootView, id);
      if (appView72 == null) {
        break missingId;
      }

      id = R.id.box_save_movedate;
      LinearLayout boxSaveMovedate = ViewBindings.findChildViewById(rootView, id);
      if (boxSaveMovedate == null) {
        break missingId;
      }

      id = R.id.box_view5;
      LinearLayout boxView5 = ViewBindings.findChildViewById(rootView, id);
      if (boxView5 == null) {
        break missingId;
      }

      id = R.id.btn_query;
      Button btnQuery = ViewBindings.findChildViewById(rootView, id);
      if (btnQuery == null) {
        break missingId;
      }

      id = R.id.btn_save;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.dlv_no;
      EditText dlvNo = ViewBindings.findChildViewById(rootView, id);
      if (dlvNo == null) {
        break missingId;
      }

      id = R.id.dlv_no_hide;
      TextView dlvNoHide = ViewBindings.findChildViewById(rootView, id);
      if (dlvNoHide == null) {
        break missingId;
      }

      id = R.id.dlv_qty;
      TextView dlvQty = ViewBindings.findChildViewById(rootView, id);
      if (dlvQty == null) {
        break missingId;
      }

      id = R.id.img_barcode;
      ImageView imgBarcode = ViewBindings.findChildViewById(rootView, id);
      if (imgBarcode == null) {
        break missingId;
      }

      id = R.id.item_cd;
      TextView itemCd = ViewBindings.findChildViewById(rootView, id);
      if (itemCd == null) {
        break missingId;
      }

      id = R.id.item_nm;
      TextView itemNm = ViewBindings.findChildViewById(rootView, id);
      if (itemNm == null) {
        break missingId;
      }

      id = R.id.lbl_information;
      LinearLayout lblInformation = ViewBindings.findChildViewById(rootView, id);
      if (lblInformation == null) {
        break missingId;
      }

      id = R.id.listOrder;
      ListView listOrder = ViewBindings.findChildViewById(rootView, id);
      if (listOrder == null) {
        break missingId;
      }

      id = R.id.move_date;
      EditText moveDate = ViewBindings.findChildViewById(rootView, id);
      if (moveDate == null) {
        break missingId;
      }

      id = R.id.spec;
      TextView spec = ViewBindings.findChildViewById(rootView, id);
      if (spec == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new ActivityM31HdrBinding((RelativeLayout) rootView, appTitle, appView100, appView111,
          appView13, appView2, appView222, appView5, appView6, appView72, boxSaveMovedate, boxView5,
          btnQuery, btnSave, dlvNo, dlvNoHide, dlvQty, imgBarcode, itemCd, itemNm, lblInformation,
          listOrder, moveDate, spec, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
