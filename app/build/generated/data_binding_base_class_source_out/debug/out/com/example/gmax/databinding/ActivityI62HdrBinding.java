// Generated by view binder compiler. Do not edit!
package com.example.gmax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gmax.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityI62HdrBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView appTitle;

  @NonNull
  public final LinearLayout appView1;

  @NonNull
  public final LinearLayout appView11;

  @NonNull
  public final LinearLayout appView2;

  @NonNull
  public final LinearLayout appView21;

  @NonNull
  public final LinearLayout appView3;

  @NonNull
  public final LinearLayout appView31;

  @NonNull
  public final LinearLayout appView4;

  @NonNull
  public final LinearLayout appView41;

  @NonNull
  public final LinearLayout appView5;

  @NonNull
  public final LinearLayout appView51;

  @NonNull
  public final LinearLayout boxView1;

  @NonNull
  public final Button btnPopupAdd;

  @NonNull
  public final Button btnPopupRemove;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final CheckBox chkSee;

  @NonNull
  public final Spinner costCenter;

  @NonNull
  public final EditText issueDate;

  @NonNull
  public final RelativeLayout layoutBody;

  @NonNull
  public final RelativeLayout layoutBtn;

  @NonNull
  public final RelativeLayout layoutMenuTitle;

  @NonNull
  public final RelativeLayout lblCenterLayout;

  @NonNull
  public final LinearLayout lblInformation;

  @NonNull
  public final ListView listOrder;

  @NonNull
  public final Spinner storageLocation;

  @NonNull
  public final EditText txtDocumentText;

  @NonNull
  public final Spinner workCenter;

  private ActivityI62HdrBinding(@NonNull RelativeLayout rootView, @NonNull TextView appTitle,
      @NonNull LinearLayout appView1, @NonNull LinearLayout appView11,
      @NonNull LinearLayout appView2, @NonNull LinearLayout appView21,
      @NonNull LinearLayout appView3, @NonNull LinearLayout appView31,
      @NonNull LinearLayout appView4, @NonNull LinearLayout appView41,
      @NonNull LinearLayout appView5, @NonNull LinearLayout appView51,
      @NonNull LinearLayout boxView1, @NonNull Button btnPopupAdd, @NonNull Button btnPopupRemove,
      @NonNull Button btnSave, @NonNull CheckBox chkSee, @NonNull Spinner costCenter,
      @NonNull EditText issueDate, @NonNull RelativeLayout layoutBody,
      @NonNull RelativeLayout layoutBtn, @NonNull RelativeLayout layoutMenuTitle,
      @NonNull RelativeLayout lblCenterLayout, @NonNull LinearLayout lblInformation,
      @NonNull ListView listOrder, @NonNull Spinner storageLocation,
      @NonNull EditText txtDocumentText, @NonNull Spinner workCenter) {
    this.rootView = rootView;
    this.appTitle = appTitle;
    this.appView1 = appView1;
    this.appView11 = appView11;
    this.appView2 = appView2;
    this.appView21 = appView21;
    this.appView3 = appView3;
    this.appView31 = appView31;
    this.appView4 = appView4;
    this.appView41 = appView41;
    this.appView5 = appView5;
    this.appView51 = appView51;
    this.boxView1 = boxView1;
    this.btnPopupAdd = btnPopupAdd;
    this.btnPopupRemove = btnPopupRemove;
    this.btnSave = btnSave;
    this.chkSee = chkSee;
    this.costCenter = costCenter;
    this.issueDate = issueDate;
    this.layoutBody = layoutBody;
    this.layoutBtn = layoutBtn;
    this.layoutMenuTitle = layoutMenuTitle;
    this.lblCenterLayout = lblCenterLayout;
    this.lblInformation = lblInformation;
    this.listOrder = listOrder;
    this.storageLocation = storageLocation;
    this.txtDocumentText = txtDocumentText;
    this.workCenter = workCenter;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityI62HdrBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityI62HdrBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_i62_hdr, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityI62HdrBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_title;
      TextView appTitle = ViewBindings.findChildViewById(rootView, id);
      if (appTitle == null) {
        break missingId;
      }

      id = R.id.app_view1;
      LinearLayout appView1 = ViewBindings.findChildViewById(rootView, id);
      if (appView1 == null) {
        break missingId;
      }

      id = R.id.app_view1_1;
      LinearLayout appView11 = ViewBindings.findChildViewById(rootView, id);
      if (appView11 == null) {
        break missingId;
      }

      id = R.id.app_view2;
      LinearLayout appView2 = ViewBindings.findChildViewById(rootView, id);
      if (appView2 == null) {
        break missingId;
      }

      id = R.id.app_view2_1;
      LinearLayout appView21 = ViewBindings.findChildViewById(rootView, id);
      if (appView21 == null) {
        break missingId;
      }

      id = R.id.app_view3;
      LinearLayout appView3 = ViewBindings.findChildViewById(rootView, id);
      if (appView3 == null) {
        break missingId;
      }

      id = R.id.app_view3_1;
      LinearLayout appView31 = ViewBindings.findChildViewById(rootView, id);
      if (appView31 == null) {
        break missingId;
      }

      id = R.id.app_view4;
      LinearLayout appView4 = ViewBindings.findChildViewById(rootView, id);
      if (appView4 == null) {
        break missingId;
      }

      id = R.id.app_view4_1;
      LinearLayout appView41 = ViewBindings.findChildViewById(rootView, id);
      if (appView41 == null) {
        break missingId;
      }

      id = R.id.app_view5;
      LinearLayout appView5 = ViewBindings.findChildViewById(rootView, id);
      if (appView5 == null) {
        break missingId;
      }

      id = R.id.app_view5_1;
      LinearLayout appView51 = ViewBindings.findChildViewById(rootView, id);
      if (appView51 == null) {
        break missingId;
      }

      id = R.id.box_view1;
      LinearLayout boxView1 = ViewBindings.findChildViewById(rootView, id);
      if (boxView1 == null) {
        break missingId;
      }

      id = R.id.btn_popup_add;
      Button btnPopupAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnPopupAdd == null) {
        break missingId;
      }

      id = R.id.btn_popup_remove;
      Button btnPopupRemove = ViewBindings.findChildViewById(rootView, id);
      if (btnPopupRemove == null) {
        break missingId;
      }

      id = R.id.btn_save;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.chk_see;
      CheckBox chkSee = ViewBindings.findChildViewById(rootView, id);
      if (chkSee == null) {
        break missingId;
      }

      id = R.id.cost_center;
      Spinner costCenter = ViewBindings.findChildViewById(rootView, id);
      if (costCenter == null) {
        break missingId;
      }

      id = R.id.issue_date;
      EditText issueDate = ViewBindings.findChildViewById(rootView, id);
      if (issueDate == null) {
        break missingId;
      }

      id = R.id.layout_body;
      RelativeLayout layoutBody = ViewBindings.findChildViewById(rootView, id);
      if (layoutBody == null) {
        break missingId;
      }

      id = R.id.layout_btn;
      RelativeLayout layoutBtn = ViewBindings.findChildViewById(rootView, id);
      if (layoutBtn == null) {
        break missingId;
      }

      id = R.id.layout_menu_title;
      RelativeLayout layoutMenuTitle = ViewBindings.findChildViewById(rootView, id);
      if (layoutMenuTitle == null) {
        break missingId;
      }

      id = R.id.lbl_center_layout;
      RelativeLayout lblCenterLayout = ViewBindings.findChildViewById(rootView, id);
      if (lblCenterLayout == null) {
        break missingId;
      }

      id = R.id.lbl_information;
      LinearLayout lblInformation = ViewBindings.findChildViewById(rootView, id);
      if (lblInformation == null) {
        break missingId;
      }

      id = R.id.listOrder;
      ListView listOrder = ViewBindings.findChildViewById(rootView, id);
      if (listOrder == null) {
        break missingId;
      }

      id = R.id.storage_location;
      Spinner storageLocation = ViewBindings.findChildViewById(rootView, id);
      if (storageLocation == null) {
        break missingId;
      }

      id = R.id.txtDocumentText;
      EditText txtDocumentText = ViewBindings.findChildViewById(rootView, id);
      if (txtDocumentText == null) {
        break missingId;
      }

      id = R.id.work_center;
      Spinner workCenter = ViewBindings.findChildViewById(rootView, id);
      if (workCenter == null) {
        break missingId;
      }

      return new ActivityI62HdrBinding((RelativeLayout) rootView, appTitle, appView1, appView11,
          appView2, appView21, appView3, appView31, appView4, appView41, appView5, appView51,
          boxView1, btnPopupAdd, btnPopupRemove, btnSave, chkSee, costCenter, issueDate, layoutBody,
          layoutBtn, layoutMenuTitle, lblCenterLayout, lblInformation, listOrder, storageLocation,
          txtDocumentText, workCenter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
