// Generated by view binder compiler. Do not edit!
package com.example.gmax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gmax.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListViewS14HdrBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView DNGIQTY;

  @NonNull
  public final TextView REQQTY2;

  @NonNull
  public final TextView dnNo;

  @NonNull
  public final TextView dnReqNo;

  @NonNull
  public final TextView endDt;

  @NonNull
  public final TextView goodOnHandQty;

  @NonNull
  public final TextView itemCd;

  @NonNull
  public final TextView itemNm;

  @NonNull
  public final TextView location;

  @NonNull
  public final TextView locationQty;

  @NonNull
  public final TextView movType;

  @NonNull
  public final TextView plantCd;

  @NonNull
  public final TextView shipToParty;

  @NonNull
  public final TextView slNm;

  @NonNull
  public final TextView soType;

  @NonNull
  public final TextView startDt;

  private ListViewS14HdrBinding(@NonNull LinearLayout rootView, @NonNull TextView DNGIQTY,
      @NonNull TextView REQQTY2, @NonNull TextView dnNo, @NonNull TextView dnReqNo,
      @NonNull TextView endDt, @NonNull TextView goodOnHandQty, @NonNull TextView itemCd,
      @NonNull TextView itemNm, @NonNull TextView location, @NonNull TextView locationQty,
      @NonNull TextView movType, @NonNull TextView plantCd, @NonNull TextView shipToParty,
      @NonNull TextView slNm, @NonNull TextView soType, @NonNull TextView startDt) {
    this.rootView = rootView;
    this.DNGIQTY = DNGIQTY;
    this.REQQTY2 = REQQTY2;
    this.dnNo = dnNo;
    this.dnReqNo = dnReqNo;
    this.endDt = endDt;
    this.goodOnHandQty = goodOnHandQty;
    this.itemCd = itemCd;
    this.itemNm = itemNm;
    this.location = location;
    this.locationQty = locationQty;
    this.movType = movType;
    this.plantCd = plantCd;
    this.shipToParty = shipToParty;
    this.slNm = slNm;
    this.soType = soType;
    this.startDt = startDt;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListViewS14HdrBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListViewS14HdrBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_view_s14_hdr, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListViewS14HdrBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DN_GI_QTY;
      TextView DNGIQTY = ViewBindings.findChildViewById(rootView, id);
      if (DNGIQTY == null) {
        break missingId;
      }

      id = R.id.REQ_QTY2;
      TextView REQQTY2 = ViewBindings.findChildViewById(rootView, id);
      if (REQQTY2 == null) {
        break missingId;
      }

      id = R.id.dn_no;
      TextView dnNo = ViewBindings.findChildViewById(rootView, id);
      if (dnNo == null) {
        break missingId;
      }

      id = R.id.dn_req_no;
      TextView dnReqNo = ViewBindings.findChildViewById(rootView, id);
      if (dnReqNo == null) {
        break missingId;
      }

      id = R.id.end_dt;
      TextView endDt = ViewBindings.findChildViewById(rootView, id);
      if (endDt == null) {
        break missingId;
      }

      id = R.id.good_on_hand_qty;
      TextView goodOnHandQty = ViewBindings.findChildViewById(rootView, id);
      if (goodOnHandQty == null) {
        break missingId;
      }

      id = R.id.item_cd;
      TextView itemCd = ViewBindings.findChildViewById(rootView, id);
      if (itemCd == null) {
        break missingId;
      }

      id = R.id.item_nm;
      TextView itemNm = ViewBindings.findChildViewById(rootView, id);
      if (itemNm == null) {
        break missingId;
      }

      id = R.id.location;
      TextView location = ViewBindings.findChildViewById(rootView, id);
      if (location == null) {
        break missingId;
      }

      id = R.id.location_qty;
      TextView locationQty = ViewBindings.findChildViewById(rootView, id);
      if (locationQty == null) {
        break missingId;
      }

      id = R.id.mov_type;
      TextView movType = ViewBindings.findChildViewById(rootView, id);
      if (movType == null) {
        break missingId;
      }

      id = R.id.plant_cd;
      TextView plantCd = ViewBindings.findChildViewById(rootView, id);
      if (plantCd == null) {
        break missingId;
      }

      id = R.id.ship_to_party;
      TextView shipToParty = ViewBindings.findChildViewById(rootView, id);
      if (shipToParty == null) {
        break missingId;
      }

      id = R.id.sl_nm;
      TextView slNm = ViewBindings.findChildViewById(rootView, id);
      if (slNm == null) {
        break missingId;
      }

      id = R.id.so_type;
      TextView soType = ViewBindings.findChildViewById(rootView, id);
      if (soType == null) {
        break missingId;
      }

      id = R.id.start_dt;
      TextView startDt = ViewBindings.findChildViewById(rootView, id);
      if (startDt == null) {
        break missingId;
      }

      return new ListViewS14HdrBinding((LinearLayout) rootView, DNGIQTY, REQQTY2, dnNo, dnReqNo,
          endDt, goodOnHandQty, itemCd, itemNm, location, locationQty, movType, plantCd,
          shipToParty, slNm, soType, startDt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
