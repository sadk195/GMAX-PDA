// Generated by view binder compiler. Do not edit!
package com.example.gmax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gmax.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityI60Binding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final MaterialButton btnMaterialDelivery;

  @NonNull
  public final MaterialButton btnMaterialImportBad;

  @NonNull
  public final MaterialButton btnMaterialImportGood;

  @NonNull
  public final MaterialButton btnMaterialStatus;

  @NonNull
  public final MaterialToolbar materialToolbar;

  private ActivityI60Binding(@NonNull RelativeLayout rootView, @NonNull AppBarLayout appBarLayout,
      @NonNull MaterialButton btnMaterialDelivery, @NonNull MaterialButton btnMaterialImportBad,
      @NonNull MaterialButton btnMaterialImportGood, @NonNull MaterialButton btnMaterialStatus,
      @NonNull MaterialToolbar materialToolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.btnMaterialDelivery = btnMaterialDelivery;
    this.btnMaterialImportBad = btnMaterialImportBad;
    this.btnMaterialImportGood = btnMaterialImportGood;
    this.btnMaterialStatus = btnMaterialStatus;
    this.materialToolbar = materialToolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityI60Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityI60Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_i60, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityI60Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.btn_material_delivery;
      MaterialButton btnMaterialDelivery = ViewBindings.findChildViewById(rootView, id);
      if (btnMaterialDelivery == null) {
        break missingId;
      }

      id = R.id.btn_material_import_bad;
      MaterialButton btnMaterialImportBad = ViewBindings.findChildViewById(rootView, id);
      if (btnMaterialImportBad == null) {
        break missingId;
      }

      id = R.id.btn_material_import_good;
      MaterialButton btnMaterialImportGood = ViewBindings.findChildViewById(rootView, id);
      if (btnMaterialImportGood == null) {
        break missingId;
      }

      id = R.id.btn_material_status;
      MaterialButton btnMaterialStatus = ViewBindings.findChildViewById(rootView, id);
      if (btnMaterialStatus == null) {
        break missingId;
      }

      id = R.id.materialToolbar;
      MaterialToolbar materialToolbar = ViewBindings.findChildViewById(rootView, id);
      if (materialToolbar == null) {
        break missingId;
      }

      return new ActivityI60Binding((RelativeLayout) rootView, appBarLayout, btnMaterialDelivery,
          btnMaterialImportBad, btnMaterialImportGood, btnMaterialStatus, materialToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
