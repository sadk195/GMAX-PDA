// Generated by view binder compiler. Do not edit!
package com.example.gmax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gmax.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListViewM14QueryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView dnNo;

  @NonNull
  public final TextView itemCd;

  @NonNull
  public final TextView itemNm;

  @NonNull
  public final TextView movType;

  @NonNull
  public final TextView plantCd;

  @NonNull
  public final TextView poNo;

  @NonNull
  public final TextView seqNo;

  @NonNull
  public final TextView shipToPaty;

  @NonNull
  public final TextView soType;

  @NonNull
  public final TextView spec;

  private ListViewM14QueryBinding(@NonNull LinearLayout rootView, @NonNull TextView dnNo,
      @NonNull TextView itemCd, @NonNull TextView itemNm, @NonNull TextView movType,
      @NonNull TextView plantCd, @NonNull TextView poNo, @NonNull TextView seqNo,
      @NonNull TextView shipToPaty, @NonNull TextView soType, @NonNull TextView spec) {
    this.rootView = rootView;
    this.dnNo = dnNo;
    this.itemCd = itemCd;
    this.itemNm = itemNm;
    this.movType = movType;
    this.plantCd = plantCd;
    this.poNo = poNo;
    this.seqNo = seqNo;
    this.shipToPaty = shipToPaty;
    this.soType = soType;
    this.spec = spec;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListViewM14QueryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListViewM14QueryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_view_m14_query, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListViewM14QueryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dn_no;
      TextView dnNo = ViewBindings.findChildViewById(rootView, id);
      if (dnNo == null) {
        break missingId;
      }

      id = R.id.item_cd;
      TextView itemCd = ViewBindings.findChildViewById(rootView, id);
      if (itemCd == null) {
        break missingId;
      }

      id = R.id.item_nm;
      TextView itemNm = ViewBindings.findChildViewById(rootView, id);
      if (itemNm == null) {
        break missingId;
      }

      id = R.id.mov_type;
      TextView movType = ViewBindings.findChildViewById(rootView, id);
      if (movType == null) {
        break missingId;
      }

      id = R.id.plant_cd;
      TextView plantCd = ViewBindings.findChildViewById(rootView, id);
      if (plantCd == null) {
        break missingId;
      }

      id = R.id.po_no;
      TextView poNo = ViewBindings.findChildViewById(rootView, id);
      if (poNo == null) {
        break missingId;
      }

      id = R.id.seq_no;
      TextView seqNo = ViewBindings.findChildViewById(rootView, id);
      if (seqNo == null) {
        break missingId;
      }

      id = R.id.ship_to_paty;
      TextView shipToPaty = ViewBindings.findChildViewById(rootView, id);
      if (shipToPaty == null) {
        break missingId;
      }

      id = R.id.so_type;
      TextView soType = ViewBindings.findChildViewById(rootView, id);
      if (soType == null) {
        break missingId;
      }

      id = R.id.spec;
      TextView spec = ViewBindings.findChildViewById(rootView, id);
      if (spec == null) {
        break missingId;
      }

      return new ListViewM14QueryBinding((LinearLayout) rootView, dnNo, itemCd, itemNm, movType,
          plantCd, poNo, seqNo, shipToPaty, soType, spec);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
