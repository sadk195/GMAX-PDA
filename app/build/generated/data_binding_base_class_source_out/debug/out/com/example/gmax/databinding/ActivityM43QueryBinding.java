// Generated by view binder compiler. Do not edit!
package com.example.gmax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gmax.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityM43QueryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView appTitle;

  @NonNull
  public final LinearLayout appView1;

  @NonNull
  public final LinearLayout appView11;

  @NonNull
  public final LinearLayout appView4;

  @NonNull
  public final LinearLayout appView41;

  @NonNull
  public final LinearLayout appView5;

  @NonNull
  public final LinearLayout boxView1;

  @NonNull
  public final Button btnDtl;

  @NonNull
  public final Button btnEnd;

  @NonNull
  public final Button btnHide;

  @NonNull
  public final Button btnOpen;

  @NonNull
  public final Button btnQuery;

  @NonNull
  public final LinearLayout btnView;

  @NonNull
  public final DrawerLayout drawer;

  @NonNull
  public final RelativeLayout layoutBody;

  @NonNull
  public final RelativeLayout layoutBtn;

  @NonNull
  public final RelativeLayout layoutDrawer;

  @NonNull
  public final RelativeLayout layoutMenuTitle;

  @NonNull
  public final TextView lblCount;

  @NonNull
  public final LinearLayout lblView1;

  @NonNull
  public final EditText length;

  @NonNull
  public final ListView listOrder;

  @NonNull
  public final EditText width;

  private ActivityM43QueryBinding(@NonNull LinearLayout rootView, @NonNull TextView appTitle,
      @NonNull LinearLayout appView1, @NonNull LinearLayout appView11,
      @NonNull LinearLayout appView4, @NonNull LinearLayout appView41,
      @NonNull LinearLayout appView5, @NonNull LinearLayout boxView1, @NonNull Button btnDtl,
      @NonNull Button btnEnd, @NonNull Button btnHide, @NonNull Button btnOpen,
      @NonNull Button btnQuery, @NonNull LinearLayout btnView, @NonNull DrawerLayout drawer,
      @NonNull RelativeLayout layoutBody, @NonNull RelativeLayout layoutBtn,
      @NonNull RelativeLayout layoutDrawer, @NonNull RelativeLayout layoutMenuTitle,
      @NonNull TextView lblCount, @NonNull LinearLayout lblView1, @NonNull EditText length,
      @NonNull ListView listOrder, @NonNull EditText width) {
    this.rootView = rootView;
    this.appTitle = appTitle;
    this.appView1 = appView1;
    this.appView11 = appView11;
    this.appView4 = appView4;
    this.appView41 = appView41;
    this.appView5 = appView5;
    this.boxView1 = boxView1;
    this.btnDtl = btnDtl;
    this.btnEnd = btnEnd;
    this.btnHide = btnHide;
    this.btnOpen = btnOpen;
    this.btnQuery = btnQuery;
    this.btnView = btnView;
    this.drawer = drawer;
    this.layoutBody = layoutBody;
    this.layoutBtn = layoutBtn;
    this.layoutDrawer = layoutDrawer;
    this.layoutMenuTitle = layoutMenuTitle;
    this.lblCount = lblCount;
    this.lblView1 = lblView1;
    this.length = length;
    this.listOrder = listOrder;
    this.width = width;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityM43QueryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityM43QueryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_m43_query, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityM43QueryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_title;
      TextView appTitle = ViewBindings.findChildViewById(rootView, id);
      if (appTitle == null) {
        break missingId;
      }

      id = R.id.app_view1;
      LinearLayout appView1 = ViewBindings.findChildViewById(rootView, id);
      if (appView1 == null) {
        break missingId;
      }

      id = R.id.app_view1_1;
      LinearLayout appView11 = ViewBindings.findChildViewById(rootView, id);
      if (appView11 == null) {
        break missingId;
      }

      id = R.id.app_view4;
      LinearLayout appView4 = ViewBindings.findChildViewById(rootView, id);
      if (appView4 == null) {
        break missingId;
      }

      id = R.id.app_view4_1;
      LinearLayout appView41 = ViewBindings.findChildViewById(rootView, id);
      if (appView41 == null) {
        break missingId;
      }

      id = R.id.app_view5;
      LinearLayout appView5 = ViewBindings.findChildViewById(rootView, id);
      if (appView5 == null) {
        break missingId;
      }

      id = R.id.box_view1;
      LinearLayout boxView1 = ViewBindings.findChildViewById(rootView, id);
      if (boxView1 == null) {
        break missingId;
      }

      id = R.id.btn_dtl;
      Button btnDtl = ViewBindings.findChildViewById(rootView, id);
      if (btnDtl == null) {
        break missingId;
      }

      id = R.id.btn_end;
      Button btnEnd = ViewBindings.findChildViewById(rootView, id);
      if (btnEnd == null) {
        break missingId;
      }

      id = R.id.btn_hide;
      Button btnHide = ViewBindings.findChildViewById(rootView, id);
      if (btnHide == null) {
        break missingId;
      }

      id = R.id.btn_open;
      Button btnOpen = ViewBindings.findChildViewById(rootView, id);
      if (btnOpen == null) {
        break missingId;
      }

      id = R.id.btn_query;
      Button btnQuery = ViewBindings.findChildViewById(rootView, id);
      if (btnQuery == null) {
        break missingId;
      }

      id = R.id.btn_view;
      LinearLayout btnView = ViewBindings.findChildViewById(rootView, id);
      if (btnView == null) {
        break missingId;
      }

      id = R.id.drawer;
      DrawerLayout drawer = ViewBindings.findChildViewById(rootView, id);
      if (drawer == null) {
        break missingId;
      }

      id = R.id.layout_body;
      RelativeLayout layoutBody = ViewBindings.findChildViewById(rootView, id);
      if (layoutBody == null) {
        break missingId;
      }

      id = R.id.layout_btn;
      RelativeLayout layoutBtn = ViewBindings.findChildViewById(rootView, id);
      if (layoutBtn == null) {
        break missingId;
      }

      id = R.id.layout_drawer;
      RelativeLayout layoutDrawer = ViewBindings.findChildViewById(rootView, id);
      if (layoutDrawer == null) {
        break missingId;
      }

      id = R.id.layout_menu_title;
      RelativeLayout layoutMenuTitle = ViewBindings.findChildViewById(rootView, id);
      if (layoutMenuTitle == null) {
        break missingId;
      }

      id = R.id.lbl_count;
      TextView lblCount = ViewBindings.findChildViewById(rootView, id);
      if (lblCount == null) {
        break missingId;
      }

      id = R.id.lbl_view1;
      LinearLayout lblView1 = ViewBindings.findChildViewById(rootView, id);
      if (lblView1 == null) {
        break missingId;
      }

      id = R.id.length;
      EditText length = ViewBindings.findChildViewById(rootView, id);
      if (length == null) {
        break missingId;
      }

      id = R.id.listOrder;
      ListView listOrder = ViewBindings.findChildViewById(rootView, id);
      if (listOrder == null) {
        break missingId;
      }

      id = R.id.width;
      EditText width = ViewBindings.findChildViewById(rootView, id);
      if (width == null) {
        break missingId;
      }

      return new ActivityM43QueryBinding((LinearLayout) rootView, appTitle, appView1, appView11,
          appView4, appView41, appView5, boxView1, btnDtl, btnEnd, btnHide, btnOpen, btnQuery,
          btnView, drawer, layoutBody, layoutBtn, layoutDrawer, layoutMenuTitle, lblCount, lblView1,
          length, listOrder, width);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
